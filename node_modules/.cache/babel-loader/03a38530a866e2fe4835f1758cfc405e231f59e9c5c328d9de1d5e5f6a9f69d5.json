{"ast":null,"code":"var _jsxFileName = \"/home/glory/To-Do-app/src/components/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoList(_ref) {\n  _s();\n  let {\n    todos,\n    deleteTodo,\n    updateTodo,\n    editTodo\n  } = _ref;\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const [editedText, setEditedText] = useState(\"\");\n  const handleDelete = id => {\n    deleteTodo(id);\n  };\n  const handleUpdate = id => {\n    updateTodo(id);\n  };\n  const handleEdit = (id, text) => {\n    setEditingTodoId(id);\n    setEditedText(text);\n  };\n  const handleSave = id => {\n    editTodo(id, editedText);\n    setEditingTodoId(null);\n    setEditedText(\"\");\n  };\n  const handleCancel = () => {\n    setEditingTodoId(null);\n    setEditedText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: editingTodoId === todo.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editedText,\n          onChange: e => setEditedText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSave(todo.id),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => handleUpdate(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(todo.id, todo.text),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"d2LSMHqdBBHy9oguHnzDVxosFgo=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoList","_ref","_s","todos","deleteTodo","updateTodo","editTodo","editingTodoId","setEditingTodoId","editedText","setEditedText","handleDelete","id","handleUpdate","handleEdit","text","handleSave","handleCancel","children","map","todo","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","checked","completed","_c","$RefreshReg$"],"sources":["/home/glory/To-Do-app/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction TodoList({ todos, deleteTodo, updateTodo, editTodo }) {\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const [editedText, setEditedText] = useState(\"\");\n\n  const handleDelete = (id) => {\n    deleteTodo(id);\n  };\n\n  const handleUpdate = (id) => {\n    updateTodo(id);\n  };\n\n  const handleEdit = (id, text) => {\n    setEditingTodoId(id);\n    setEditedText(text);\n  };\n\n  const handleSave = (id) => {\n    editTodo(id, editedText);\n    setEditingTodoId(null);\n    setEditedText(\"\");\n  };\n\n  const handleCancel = () => {\n    setEditingTodoId(null);\n    setEditedText(\"\");\n  };\n\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <li key={todo.id}>\n          {editingTodoId === todo.id ? (\n            <>\n              <input\n                type=\"text\"\n                value={editedText}\n                onChange={(e) => setEditedText(e.target.value)}\n              />\n              <button onClick={() => handleSave(todo.id)}>Save</button>\n              <button onClick={handleCancel}>Cancel</button>\n            </>\n          ) : (\n            <>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={() => handleUpdate(todo.id)}\n              />\n              <span>{todo.text}</span>\n              <button onClick={() => handleDelete(todo.id)}>Delete</button>\n              <button onClick={() => handleEdit(todo.id, todo.text)}>Edit</button>\n            </>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}